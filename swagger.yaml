openapi: 3.0.0
info:
  title: Interop Anomalie Adresse
  version: 1.0.0
tags:
  - name: AnomalieAdresse
servers:
  - url: https://serverRoot/api/anomalieAdresse/v1
paths:
  /anomalieAdresse:
    get:
      operationId: listAnomalie
      summary: List or find Anomalie objects
      description: This operation list or find Anomalie entities
      tags:
        - AnomalieAdresse
      parameters:
        - name: fields
          description: Comma-separated properties to be provided in response
          required: false
          in: query
          schema:
            type: string
        - name: "@type"
          in: query
          description: Filter type
          schema:
            type: string
          style: form
        - name: creationDate
          in: query
          description: Filter creationDate
          schema:
            type: string
          style: form
        - name: creationDate.lte
          in: query
          description: Filter creationDate before
          schema:
            type: string
          style: form
        - name: creationDate.lt
          in: query
          description: Filter creationDate strictly_before
          schema:
            type: string
          style: form
        - name: creationDate.gte
          in: query
          description: Filter creationDate after
          schema:
            type: string
          style: form
        - name: creationDate.gt
          in: query
          description: Filter creationDate strictly_after
          schema:
            type: string
          style: form
        - name: offset
          description: Requested index for start of resources to be provided in response
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: Requested number of resources to be provided in response
          required: false
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Anomalie"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createAnomalie
      summary: Creates an Anomalie
      description: This operation creates a Anomalie entity.
      tags:
        - AnomalieAdresse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Anomalie-Create"
        description: The Anomalie to be created
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: "URI of the newly created resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomalie"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/anomalieAdresse/{id}":
    get:
      operationId: retrieveAnomalie
      summary: Retrieves a Anomalie by ID
      description: This operation retrieves a Anomalie entity. Attribute selection is
        enabled for all first level attributes.
      tags:
        - AnomalieAdresse
      parameters:
        - name: id
          description: Identifier of the Anomalie
          required: true
          in: path
          schema:
            type: string
        - name: fields
          description: Comma-separated properties to provide in response
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomalie"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Anomalie-Create:
      type: object
      properties:
        commentaire_oc:
          type: string
        commande_client_final_oc:
          type: boolean
          description: Si 1, signalement suite à une demande client final
        "@type":
          type: string
        creationDate:
          type: string
          format: date-time
      discriminator:
        propertyName: "@type"
        mapping:
          creation: '#/components/schemas/Creation-Create'
          modification: '#/components/schemas/Modification-Create'
          creationImmeubleNeuf: '#/components/schemas/CreationImmeubleNeuf-Create'
          anomalieEnMasse: '#/components/schemas/AnomalieEnMasse-Create'




    Anomalie:
      type: object
      required:
        - id
        - href
      properties:
         id:
           type: string
           description: Unique-Identifier for this Anomalie
         href:
           type: string
           description: URL serving as reference for this Anomalie
         commentaire_oc:
           type: string
         commande_client_final_oc:
           type: boolean
           description: Si 1, signalement suite à une demande client final
         "@type":
           type: string
         creation_date:
           type: string
           format: date-time
      discriminator:
        propertyName: "@type"
        mapping:
          creation: '#/components/schemas/Creation-Get'
          modification: '#/components/schemas/Modification-Get'
          creationImmeubleNeuf: '#/components/schemas/CreationImmeubleNeuf-Get'
          anomalieEnMasse: '#/components/schemas/AnomalieEnMasse-Get'

    Creation:
      type: object
      description: L'adresse cible correspond à une adresse simple à créer
      required:
        - "@type"
      properties:
        "@type":
          type: string
        adresse:
          $ref: "#/components/schemas/Adresse"

    Creation-Get:
      allOf:
        - $ref: "#/components/schemas/Anomalie"
        - $ref: "#/components/schemas/Creation"

    Creation-Create:
      allOf:
        - $ref: "#/components/schemas/Anomalie-Create"
        - $ref: "#/components/schemas/Creation"

    CreationImmeubleNeuf:
      allOf:
        - $ref: '#/components/schemas/Creation'
        - type: object
          description: L'adresse cible correspond à un immeuble neuf à créer
          required:
            - "@type"
          properties:
            "@type":
              type: string
            adresse:
              $ref: "#/components/schemas/AdresseComplementsSpecifiques"

    CreationImmeubleNeuf-Get:
      allOf:
        - $ref: "#/components/schemas/Anomalie"
        - $ref: "#/components/schemas/CreationImmeubleNeuf"

    CreationImmeubleNeuf-Create:
      allOf:
        - $ref: "#/components/schemas/Anomalie-Create"
        - $ref: "#/components/schemas/CreationImmeubleNeuf"

    Modification:
      type: object
      description: L'adresse cible peut décrire une modification simple d'adresse, ou avec compléments
      required:
        - "@type"
      properties:
        "@type":
          type: string
        adresse_initiale:
          $ref: "#/components/schemas/AdresseRef"
        adresse_cible:
          $ref: "#/components/schemas/Adresse"

    Modification-Get:
      allOf:
        - $ref: "#/components/schemas/Anomalie"
        - $ref: "#/components/schemas/Modification"

    Modification-Create:
      allOf:
        - $ref: "#/components/schemas/Anomalie-Create"
        - $ref: "#/components/schemas/Modification"

    Adresse:
      type: object
      properties:
        code_adresse:
          type: string
          maxLength: 10
          description: Code hexacle numero.
        code_insee:
          type: string
          maxLength: 5
          description: Code Insee Immeuble.
        code_voie_rivoli:
          type: string
          maxLength: 4
          description: Code Rivoli Immeuble.
        numero_voie:
          type: integer
          minimum: 0
          maximum: 99999
          description: Numero Voie Immeuble.
        complement_numero_voie:
          type: string
          maxLength: 2
          description: Complement du Numero Voie Immeuble.
        type_voie:
          type: string
          maxLength: 255
          description: Type Voie Immeuble.
        nom_voie:
          type: string
          maxLength: 255
          description: Nom Voie Immeuble.
        code_postal:
          type: string
          maxLength: 5
          description: Code Postal Immeuble.
        commune:
          type: string
          maxLength: 255
          description: Commune Immeuble.
        batiment:
          type: string
          maxLength: 255
          description: Batiment Immeuble.
        nombre_logements:
          type: integer
          description: Nombre Locaux Immeuble.
        type_immeuble:
          type: string
          maxLength: 20
          description: Type Immeuble.
          enum: [PAVILLON,IMMEUBLE,LOTISSEMENT]
        coordonnees:
          $ref: "#/components/schemas/CoordonnesXY"
        immeuble_neuf:
          type: integer
          description: Caractere neuf Immeuble.\nObligatoire\nA remplir avec la valeur cible  si type_demande = CREATION, sinon 0\nExplication des valeurs 0=Ne sait pas ; 1=Oui (avec cuivre) ; 2=Oui (ZLIN=sans cuivre) ; 3=Non
          enum: [0,1,2,3]
          default: 0
        reference_pm:
          type: string
          maxLength: 20
          description: PM Immmeuble.
        code_ban:
          type: string
          maxLength: 30
          description: Code BAN Immeuble.
        code_hexacle_voie:
          type: string
          maxLength: 10
          description: Code Hexacle du 0 de la voie.
        information_complementaire:
          type: string
          maxLength: 255
          description: ligne 5 du SNA par exemple.
        "@type":
           type: string
      discriminator:
        propertyName: "@type"

    AdresseRef:
      type: object
      properties:
        identifiant_immeuble:
          type: string
          maxLength: 30

    AdresseComplementsSpecifiques:
      allOf:
        - $ref: "#/components/schemas/Adresse"
        - type: object
          properties:
            promoteur:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            organisme_bailleur:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            adresse_bailleur:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            cp_bailleur:
              type: integer
              maxLength: 5
              description: Informations a fournir si possible pour les immeubles neufs.
            ville_bailleur:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            tel_bailleur:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            siret_bailleur:
              type: string
              maxLength: 14
              description: Siret du bailleur à fournir si possible pour les immeubles neufs.
            signature_convention:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            date_signature_convention:
              type: string
              format: date
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            reference_pbo:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            adresse_pm:
              type: string
              maxLength: 255
              description: Informations a fournir si possible pour les immeubles neufs.
            coordonnees_pm:
              $ref: "#/components/schemas/CoordonnesXY"

    AnomalieEnMasse:
      type: object
      properties:
        "@type":
          type: string
        champ_anomalie:
          type: string
        adresses_initiales:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/AdresseRef"
      required:
        - "@type"
        - "champ_anomalie"
    AnomalieEnMasse-Get:
      allOf:
        - $ref: "#/components/schemas/Anomalie"
        - $ref: "#/components/schemas/AnomalieEnMasse"
    AnomalieEnMasse-Create:
      allOf:
        - $ref: "#/components/schemas/Anomalie-Create"
        - $ref: "#/components/schemas/AnomalieEnMasse"
    CoordonnesXY:
      required:
        - x
        - y
        - projection
      type: "object"
      description: Coordonnées géographiques avec le type de projection
      properties:
        x:
          type: number
        y:
          type: number
        projection:
          type: string
          maxLength: 10
          description: Type Projection geographique.\nExplication des valeurs
            - RGF93 (Lambert93) =   métropole
            - WGS84 (UTM 20N) =Guadeloupe, Martinique
            - RGFG95 (UTM 22N) = Guyane
            - RGR92 (UTM 40S) = Réunion
            - RGM 04 (UTM 38 S) = Mayotte
            - RGSPM 06 (UTM 21 N) = Saint Pierre et Miquelon
          enum: [RGF93,WGS84,RGFG95,RGR92,RGM,RGSPM]

    Error:
      description: Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      type: object
      required:
        - code
        - reason
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a
            client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can
            be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          format: uri
          description: URI of documentation describing the error.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class.
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name.
